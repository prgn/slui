<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="11" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="TMDBMoviesTest" duration-ms="4863" started-at="2020-02-10T02:41:43Z" finished-at="2020-02-10T02:41:48Z">
    <groups>
    </groups>
    <test name="MovieAPIAll" duration-ms="4863" started-at="2020-02-10T02:41:43Z" finished-at="2020-02-10T02:41:48Z">
      <class name="com.prao.ainterview.tmdb.automation.movies.MoviesAPITest">
        <test-method status="PASS" signature="initFramework(java.lang.String, java.lang.String)[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="initFramework" is-config="true" duration-ms="32" started-at="2020-02-10T02:41:43Z" finished-at="2020-02-10T02:41:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[qa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fb54f1b85b06b34f0b5c921561fc3675]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initFramework -->
        <test-method status="PASS" signature="testGetDetailsForMovieIDTwo()[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetDetailsForMovieIDTwo" duration-ms="2539" started-at="2020-02-10T02:41:43Z" finished-at="2020-02-10T02:41:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDetailsForMovieIDTwo -->
        <test-method status="PASS" signature="testGetPopularMovieWorksForInternalLanguageCode()[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetPopularMovieWorksForInternalLanguageCode" duration-ms="141" started-at="2020-02-10T02:41:45Z" finished-at="2020-02-10T02:41:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPopularMovieWorksForInternalLanguageCode -->
        <test-method status="PASS" signature="testGetPopularMovieWorksFor2DigitCode()[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetPopularMovieWorksFor2DigitCode" duration-ms="114" started-at="2020-02-10T02:41:46Z" finished-at="2020-02-10T02:41:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPopularMovieWorksFor2DigitCode -->
        <test-method status="FAIL" signature="testGetMovieDetailsByIdShouldHaveLimitOnIDCharacterLength()[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetMovieDetailsByIdShouldHaveLimitOnIDCharacterLength" duration-ms="128" started-at="2020-02-10T02:41:46Z" finished-at="2020-02-10T02:41:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[status code was not Httpstatus.SC_UNPROCESSABLE_ENTITY 422 (Unprocessable Entity) status code means expected [422] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: status code was not Httpstatus.SC_UNPROCESSABLE_ENTITY 422 (Unprocessable Entity) status code means expected [422] but found [200]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at com.prao.ainterview.tmdb.automation.movies.MoviesAPITest.testGetMovieDetailsByIdShouldHaveLimitOnIDCharacterLength(MoviesAPITest.java:165)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
at com.sun.proxy.$Proxy0.invoke(Unknown Source)
at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMovieDetailsByIdShouldHaveLimitOnIDCharacterLength -->
        <test-method status="FAIL" signature="testGetMovieDetailsByIdShouldNotAcceptNegativeNumbersAsID()[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetMovieDetailsByIdShouldNotAcceptNegativeNumbersAsID" duration-ms="105" started-at="2020-02-10T02:41:46Z" finished-at="2020-02-10T02:41:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[status code was not Httpstatus.SC_UNPROCESSABLE_ENTITY 422 (Unprocessable Entity) status code means expected [422] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: status code was not Httpstatus.SC_UNPROCESSABLE_ENTITY 422 (Unprocessable Entity) status code means expected [422] but found [404]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at com.prao.ainterview.tmdb.automation.movies.MoviesAPITest.testGetMovieDetailsByIdShouldNotAcceptNegativeNumbersAsID(MoviesAPITest.java:185)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
at com.sun.proxy.$Proxy0.invoke(Unknown Source)
at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMovieDetailsByIdShouldNotAcceptNegativeNumbersAsID -->
        <test-method status="PASS" signature="testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings(java.lang.String)[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings" duration-ms="103" started-at="2020-02-10T02:41:46Z" data-provider="listOfXSSStrings" finished-at="2020-02-10T02:41:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[javascript:alert('XSS');]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings -->
        <test-method status="PASS" signature="testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings(java.lang.String)[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings" duration-ms="102" started-at="2020-02-10T02:41:46Z" data-provider="listOfXSSStrings" finished-at="2020-02-10T02:41:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[javascript:alert(&quot;XSS&quot;)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings -->
        <test-method status="PASS" signature="testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings(java.lang.String)[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings" duration-ms="126" started-at="2020-02-10T02:41:46Z" data-provider="listOfXSSStrings" finished-at="2020-02-10T02:41:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[alert(String.fromCharCode(88,83,83))]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings -->
        <test-method status="PASS" signature="testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings(java.lang.String)[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings" duration-ms="118" started-at="2020-02-10T02:41:46Z" data-provider="listOfXSSStrings" finished-at="2020-02-10T02:41:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[jav&#x09;ascript:alert('XSS');]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMovieDetailsByIdShouldNotAcceptXSSVulnerableStrings -->
        <test-method status="FAIL" signature="testGetMovieDetailsByIdShouldThrowMeaningfulErrorForInvalidLanguageString()[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetMovieDetailsByIdShouldThrowMeaningfulErrorForInvalidLanguageString" duration-ms="1161" started-at="2020-02-10T02:41:46Z" finished-at="2020-02-10T02:41:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[status code was not Httpstatus.SC_UNPROCESSABLE_ENTITY 422 (Unprocessable Entity) status code means expected [422] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: status code was not Httpstatus.SC_UNPROCESSABLE_ENTITY 422 (Unprocessable Entity) status code means expected [422] but found [200]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at com.prao.ainterview.tmdb.automation.movies.MoviesAPITest.testGetMovieDetailsByIdShouldThrowMeaningfulErrorForInvalidLanguageString(MoviesAPITest.java:127)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
at com.sun.proxy.$Proxy0.invoke(Unknown Source)
at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMovieDetailsByIdShouldThrowMeaningfulErrorForInvalidLanguageString -->
        <test-method status="PASS" signature="testGetMovieDetailsByIdShouldThrowMeaningfulErrorForEmptyAPIKey()[pri:0, instance:com.prao.ainterview.tmdb.automation.movies.MoviesAPITest@21bcffb5]" name="testGetMovieDetailsByIdShouldThrowMeaningfulErrorForEmptyAPIKey" duration-ms="199" started-at="2020-02-10T02:41:48Z" finished-at="2020-02-10T02:41:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMovieDetailsByIdShouldThrowMeaningfulErrorForEmptyAPIKey -->
      </class> <!-- com.prao.ainterview.tmdb.automation.movies.MoviesAPITest -->
    </test> <!-- MovieAPIAll -->
  </suite> <!-- TMDBMoviesTest -->
</testng-results>
